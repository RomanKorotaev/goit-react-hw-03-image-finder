{"version":3,"sources":["components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","js/apiService.js","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","className","s","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","pageURL","this","props","src","alt","ImageGallery","state","imagesArray","map","id","Loader","Button","Modal","imageApiService","searchQuery","page","fetch","then","response","json","data","incerementPage","hits","newQuery","hitsArray","testArray","tags","previewURL","App","quiryWord","console","log","fetchImages","length","localStorage","setItem","JSON","stringify","tmpHits","getItem","parsedHits","parse","setState","prevProp","prevState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.558d0d5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__15xWl\",\"SearchForm\":\"Searchbar_SearchForm__WDgem\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3Uqyl\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1K7ZQ\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3g4wa\"};","import React, {Component} from 'react';\r\nimport s from './Searchbar.module.css'\r\n\r\nclass Searchbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className={s.Searchbar}>\r\n                <form className={s.SearchForm}>\r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                    <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                    className={s.SearchFormInput}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Searchbar;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css'\r\n\r\nclass ImageGalleryItem extends Component {\r\n\r\n    render() {\r\n        const { pageURL } = this.props;\r\n        return (\r\n        //    <p> ImageGalleryItem </p>\r\n        <img src={pageURL} alt=\"Какая-то картинка\" className=\"ImageGalleryItem-image\" />\r\n        )\r\n    }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n     pageURL: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default ImageGalleryItem;","import React, {Component} from 'react';\r\nimport s from './ImageGallery.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem'\r\n\r\n\r\nclass ImageGallery extends Component {\r\n\r\n    state = {\r\n        imagesArray: [],\r\n      }\r\n\r\n    render() {\r\n        const { imagesArray } = this.props;\r\n        return (\r\n        //    <p> ImageGallery </p>\r\n        <ul>\r\n        {/* <span className= {s.contactsListTitle}>Contacts</span> */}\r\n        { imagesArray.map(({id, pageURL}) => (\r\n            <li  key = {id}>\r\nПроверка изображения: (`id = ${id} pageURL=${pageURL}`)\r\n              {/* ВНИМАНИЕ!  Важный синтаксис во время прокидывания пропов по цепочке: onDelete = {()=>onDeleteContact(id)} */}\r\n                  <ImageGalleryItem pageURL={pageURL} />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n        )\r\n    }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n \r\n    state: PropTypes.arrayOf(\r\n        // Объект с определённой структурой\r\n        PropTypes.shape({\r\n            pageURL: PropTypes.string.isRequired,\r\n        }),\r\n    ), \r\n  };\r\n\r\n\r\nexport default ImageGallery;","import React, {Component} from 'react';\r\nimport s from './Loader.module.css'\r\n\r\nclass Loader extends Component {\r\n\r\n    render() {\r\n        return (\r\n           <p> Loader </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, {Component} from 'react';\r\nimport s from './Button.module.css'\r\n\r\nclass Button extends Component {\r\n\r\n    render() {\r\n        return (\r\n           <p> Button </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\nimport s from './Modal.module.css'\r\n\r\nclass Modal extends Component {\r\n\r\n    render() {\r\n        return (\r\n           <p> Modal </p>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\nimport Searchbar from './components/Searchbar'\n\nimport ImageGallery from './components/ImageGallery'\nimport ImageGalleryItem from './components/ImageGalleryItem'\nimport Loader from './components/Loader'\nimport Button from './components/Button'\nimport Modal from './components/Modal'\n\n\n////------------------GET-запрос -------------------\n\nimport ImageApiService from './js/apiService'\n\n\nconst imageApiService = new ImageApiService();\nlet hitsArray = []\n\n//  imageApiService.fetchImages().then (hits=>{\n//   // console.log (\"hits : \", hits);\n//   hitsArray = hits;\n// });\n\n\n///////////////////\n///////////\nconst testArray = [\n  {id: 736877, pageURL: 'https://pixabay.com/photos/tree-cat-silhouette-moon-full-moon-736877/', type: 'photo', tags: 'tree, cat, silhouette', previewURL: 'https://cdn.pixabay.com/photo/2015/04/23/21/59/tree-736877_150.jpg'},\n  {id: 2083492, pageURL: 'https://pixabay.com/photos/cat-young-animal-kitten-gray-cat-2083492/', type: 'photo', tags: 'cat, young animal, kitten', previewURL: 'https://cdn.pixabay.com/photo/2017/02/20/18/03/cat-2083492_150.jpg'},\n  {id: 323262, pageURL: 'https://pixabay.com/photos/cat-pet-licking-animal-tabby-cat-323262/', type: 'photo', tags: 'cat, pet, licking', previewURL: 'https://cdn.pixabay.com/photo/2014/04/13/20/49/cat-323262_150.jpg'},\n  {id: 1045782, pageURL: 'https://pixabay.com/photos/cat-animal-cat-portrait-cat-s-eyes-1045782/', type: 'photo', tags: 'cat, animal, cat portrait', previewURL: 'https://cdn.pixabay.com/photo/2015/11/16/14/43/cat-1045782_150.jpg'},\n  {id: 694730, pageURL: 'https://pixabay.com/photos/maine-coon-cat-cat-s-eyes-black-cat-694730/', type: 'photo', tags: \"maine coon, cat, cat's eyes\", previewURL: 'https://cdn.pixabay.com/photo/2015/03/27/13/16/maine-coon-694730_150.jpg'},\n  {id: 1285634, pageURL: 'https://pixabay.com/photos/cat-cat-s-eyes-blue-eyes-gray-cat-1285634/', type: 'photo', tags: \"cat, cat's eyes, blue eyes\", previewURL: 'https://cdn.pixabay.com/photo/2016/03/28/12/35/cat-1285634_150.png'},\n  {id: 1149841, pageURL: 'https://pixabay.com/photos/friends-cat-and-dog-pets-cat-dog-1149841/', type: 'photo', tags: 'friends, cat and dog, pets', previewURL: 'https://cdn.pixabay.com/photo/2016/01/19/17/41/friends-1149841_150.jpg'},\n  {id: 2934720, pageURL: 'https://pixabay.com/photos/cat-kitten-pets-animals-housecat-2934720/', type: 'photo', tags: 'cat, kitten, pets', previewURL: 'https://cdn.pixabay.com/photo/2017/11/09/21/41/cat-2934720_150.jpg'},\n  {id: 3715733, pageURL: 'https://pixabay.com/photos/pets-cute-cat-dog-cute-wallpaper-3715733/', type: 'photo', tags: 'pets, cute, cat', previewURL: 'https://cdn.pixabay.com/photo/2018/10/01/09/21/pets-3715733_150.jpg'},\n  {id: 4611189, pageURL: 'https://pixabay.com/photos/cat-small-kitten-domestic-cat-pet-4611189/', type: 'photo', tags: 'cat, small, kitten', previewURL: 'https://cdn.pixabay.com/photo/2019/11/08/11/56/cat-4611189_150.jpg'}\n  ]\n  //////////\n  \n\n////////////////\n\n\nclass App extends Component {\n\nstate = {\n  imagesArray: testArray,\n\n  quiryWord: \"\",\n}\n\ncomponentDidMount () {\n  console.log (\" App: componentDidMount ()\");\n  imageApiService.fetchImages()\n  .then (hits=>{\n    console.log (\" Из hits App: componentDidMount () сделан get-запрос: \", hits);\n    hitsArray = hits;\n    console.log (\" Получили ответ от бекенда: hitsArray = hits : \", hitsArray);\n\n     // ------- Дублированние данных в localStorage\n      //  Если  есть массив с данными, то записываем его в localStorage\n      if (  hitsArray.length !== 0) {\n        // console.log (\"  Обновили статус \" );\n        localStorage.setItem (\"hits\", JSON.stringify( hitsArray) );\n        console.log (\" Записали  hits в  localStorage\" );\n      } else {console.log (\"Пустой\" );}\n\n      const tmpHits =  localStorage.getItem (\"hits\");\n      const parsedHits =  JSON.parse( tmpHits )\n\n  // Перед записью данных в state  проверяем не пустой ли массив с полученными данными :   if (parsedContacts)\n  if (parsedHits!==null) { \n    this.setState ({imagesArray:  parsedHits })\n    console.log (\" Записали parsedHits  в  стейт - imagesArray\" );\n  }\n\n  });\n\n      // // ------- Дублированние данных в localStorage\n      // //  Если  есть массив с данными, то записываем его в localStorage\n      // if (  hitsArray.length !== 0) {\n      //   // console.log (\"  Обновили статус \" );\n      //   localStorage.setItem (\"hits\", JSON.stringify( hitsArray) );\n      //   console.log (\" Записали  hits в  localStorage\" );\n      // } else {console.log (\"Пустой\" );}\n  \n\n      const tmpHits =  localStorage.getItem (\"hits\");\n      const parsedHits =  JSON.parse( tmpHits )\n\n  // // Перед записью данных в state  проверяем не пустой ли массив с полученными данными :   if (parsedContacts)\n  // if (parsedHits!==null) { \n  //   this.setState ({imagesArray:  parsedHits })\n  //   console.log (\" Записали parsedHits  в  стейт - imagesArray\" );\n  // }\n\n}\n\n\ncomponentDidUpdate (prevProp, prevState) {\n  console.log (\" Worked: componentDidUpdate ()\");\n  // console.log (\"  componentDidUpdate () - prevState:\", prevState);\n  // console.log (\"  componentDidUpdate () - prevProp:\", prevProp);\n  // console.log (\"  componentDidUpdate () - this.state : \", this.state);\n\n  // if ( this.state.imagesArray !== prevState.imagesArray) {\n  //   console.log (\"  Обновили статус \" );\n  //   localStorage.setItem (\"hits\", JSON.stringify(this.state.imagesArray) );\n  // }\n\n}\n\n\n\n\n\n  render () {\n    console.log ( 'this.state.imagesArray :', this.state.imagesArray)\n\n    return (\n      <div>\n        <Searchbar />\n\n        <ImageGallery imagesArray= {this.state.imagesArray}/>\n        \n        <Loader />\n        <Button />\n        <Modal />\n\n        </div>\n    )\n  }\n}\n\nexport default App;\n\n","\r\nconst KEY_API = '23193680-1d95b6a7ab6e160162f942df5'\r\nconst BASE_URL = 'pixabay.com/api'\r\n\r\n\r\n class ImageApiService {\r\n\r\n     constructor() {\r\n         //По умолчанию для первой загрузки будет запрос на картинки природы\r\n         this.searchQuery = 'nature';\r\n         this.page = 1;\r\n    };\r\n    \r\n     \r\n     fetchImages() {\r\n            return fetch(`https://${BASE_URL}/?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=12&key=${KEY_API} `)\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        // console.log(data)\r\n                        //this.page += 1;\r\n                        this.incerementPage();\r\n                        \r\n                        return  data.hits;\r\n                    });\r\n    } \r\n\r\n    // firstLoad () {\r\n    //     nature\r\n    // }\r\n\r\n     get query() {\r\n         return this.searchQuery;\r\n     }\r\n     \r\n     set query(newQuery) {\r\n         this.searchQuery = newQuery;\r\n     }\r\n\r\n     incerementPage() {\r\n         this.page += 1;\r\n      }\r\n\r\n     resetPage() {\r\n         this.page = 1;\r\n     }\r\n\r\n}\r\n \r\nexport default ImageApiService;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}